{"version":3,"sources":["components/NavbarComponent.js","components/HeaderComponent.js","components/StackComponent.js","components/QueueComponent.js","components/HomeComponent.js","shared/graphs.js","components/BFSComponent.js","components/FooterComponent.js","components/DFSComponent.js","components/AboutComponent.js","shared/developers.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","state","isNavOpen","isDropdownOpen","toggleNav","bind","toggleDropdown","handleDropdownClick","handleNavclick","this","setState","Navbar","dark","expand","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","Dropdown","nav","toggle","DropdownToggle","caret","DropdownMenu","Component","Header","Jumbotron","destination","Stack","stack","top","lastPoppedItem","handleSubmit","createArray","handlePush","handlePop","handleReset","len","item","arr1","arr2","concat","event","value","parseInt","size","temp","preventDefault","length","nextItem","alert","renderStack","map","index","key","style","minHeight","display","alignItems","justifyContent","border","Form","onSubmit","Row","Col","md","Label","htmlFor","Input","required","type","id","name","innerRef","input","Button","color","Queue","queue","front","rear","lastDequeuedItem","handleQueue","handleDequeue","isQueueFull","isQueueEmpty","renderQueue","renderIndex","renderFront","renderRear","Home","Card","CardHeader","background","CardBody","graphs","nodes","textId","cx","cy","text","edges","x1","y1","x2","y2","network","BFS","graph","HandleStartingNode","reset","node","document","getElementById","fill","edge","stroke","ms","Promise","resolve","setTimeout","startNode","parent","i","push","shift","node_id","sleep","edge_id","requiredNode","filter","renderEdges","stroke-width","renderNodes","r","x","y","text-anchor","dy","ButtonGroup","height","width","Footer","DFS","DFS_Visit","j","About","renderDevelopers","developers","developer","in","src","image","alt","roll_no","href","email","skills","Main","path","component","withRouter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c5c92698.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavbarToggler, Collapse, NavItem, Dropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Navigation extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isDropdownOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleDropdown = this.toggleDropdown.bind(this);\r\n        this.handleDropdownClick = this.handleDropdownClick.bind(this);\r\n        this.handleNavclick = this.handleNavclick.bind(this);\r\n    }\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleDropdown(){\r\n        this.setState({\r\n            isDropdownOpen: !this.state.isDropdownOpen\r\n        });\r\n    }\r\n    handleDropdownClick(){\r\n        this.toggleDropdown();\r\n        if(this.state.isNavOpen){\r\n            this.toggleNav();\r\n        }\r\n    }\r\n    handleNavclick(){\r\n        if(this.state.isNavOpen){\r\n            this.toggleNav();\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\" className=\"fixed-top\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <Dropdown nav isOpen={this.state.isDropdownOpen} toggle={this.toggleDropdown}>\r\n                                    <DropdownToggle nav caret><span className=\"fa fa-list fa-lg\"></span> Visualizations</DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <NavLink onClick={this.handleDropdownClick} className=\"dropdown-item\" to=\"/stack\">Stack</NavLink>\r\n                                        <NavLink onClick={this.handleDropdownClick} className=\"dropdown-item\" to=\"/queue\">Queue</NavLink>\r\n                                        <NavLink onClick={this.handleDropdownClick} className=\"dropdown-item\" to=\"/bfs\">BFS</NavLink>\r\n                                        <NavLink onClick={this.handleDropdownClick} className=\"dropdown-item\" to=\"/dfs\">DFS</NavLink>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/about\"><span className=\"fa fa-user fa-lg\"></span> About the Developers</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\n\r\n\r\nfunction Header(props){\r\n    return(\r\n        <>\r\n            <Jumbotron className=\"mb-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h2>{props.destination}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Form, Label, Input, Row, Col, Button } from 'reactstrap';\r\nimport Header from './HeaderComponent';\r\n\r\nclass Stack extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            stack: [],\r\n            top: -1,\r\n            lastPoppedItem: null\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.createArray = this.createArray.bind(this);\r\n        this.handlePush = this.handlePush.bind(this);\r\n        this.handlePop = this.handlePop.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n    }\r\n    createArray(len, item){\r\n        var arr1 = [item],\r\n        arr2 = [];\r\n        while (len > 0) {\r\n            if (len & 1) arr2 = arr2.concat(arr1);\r\n            arr1 = arr1.concat(arr1);\r\n            len >>>= 1;\r\n        }\r\n        return arr2;\r\n    }\r\n    handleSubmit(event){\r\n        this.handleReset()\r\n        var value = parseInt(this.size.value);\r\n        var temp = this.createArray(value+1, null);\r\n        this.setState({\r\n            stack: temp\r\n        });\r\n        event.preventDefault();\r\n\r\n    }\r\n    handlePush(event){\r\n        if(this.state.top<this.state.stack.length-2){\r\n            var temp = this.state.stack;\r\n            temp[this.state.top + 1] = this.nextItem.value;\r\n            this.setState({\r\n                stack: temp,\r\n                top: this.state.top + 1\r\n            });\r\n        }\r\n        else{\r\n            alert('Cannot Push. Stack is full');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    handlePop(){\r\n        if(this.state.top > -1){\r\n            var temp = this.state.stack;\r\n            var lastPoppedItem = temp[this.state.top];\r\n            temp[this.state.top] = null;\r\n            this.setState({\r\n                top: this.state.top - 1,\r\n                stack: temp,\r\n                lastPoppedItem: lastPoppedItem\r\n            });\r\n        }\r\n        else{\r\n            alert(\"Cannot Pop. Stack is empty.\");\r\n        }\r\n    }\r\n    handleReset(){\r\n        this.setState({\r\n            stack: [],\r\n            top: -1,\r\n            lastPoppedItem: null\r\n        });\r\n    }\r\n    render(){\r\n        var renderStack = this.state.stack.map((item, index)=>{\r\n            return(\r\n                <div key={index} className=\"row\">\r\n                    {this.state.stack.length - 2 - index !== -1?<div className=\"col-5 text-center align-self-center bg-warning\" style={{minHeight:70, display:\"flex\", alignItems:\"center\", justifyContent:\"center\", border: \"black 2px solid\"}}><h3>{this.state.stack[this.state.stack.length - index - 2]}</h3></div>:<div className=\"col-5\" style={{minHeight:70, display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}></div>}\r\n                    <div className=\"col-1 align-self-center\">\r\n                        {this.state.stack.length - index - 2}\r\n                    </div>\r\n                    <div className=\"col-2 align-self-center\">\r\n                        <div>{this.state.top === this.state.stack.length - 2 - index? <div key={index}><i className=\"fa fa-arrow-left\"></i> top</div> : <div></div>}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n        return(\r\n            <>\r\n                <Header destination=\"Stack\"/>\r\n                <div className=\"container mb-2\">\r\n                    <div className=\"p-2 border black-yellow\">\r\n                        <div className=\"row mt-2 mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <h4>Introduction to Stack</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <p>Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out).</p>\r\n                                <p>There are many real-life examples of a stack. Consider an example of plates stacked over one another in the canteen. The plate which is at the top is the first one to be removed, i.e. the plate which has been placed at the bottommost position remains in the stack for the longest period of time. So, it can be simply seen to follow LIFO(Last In First Out)/FILO(First In Last Out) order.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <h4>Operations on Stack</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                The two main operations on Stack are:-\r\n                                <ul>\r\n                                    <li><b>Push:</b> Adds an item in the stack. If the stack is full, then it is said to be an Overflow condition.</li>\r\n                                    <li><b>Pop:</b> Removes an item from the stack. The items are popped in the reversed order in which they are pushed. If the stack is empty, then it is said to be an Underflow condition.</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-12\">\r\n                            <h4>Visualization</h4>\r\n                        </div>\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={2}>\r\n                                <Label htmlFor=\"size\">Size</Label>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <Input required type=\"number\" id=\"size\" name=\"size\" innerRef={(input) => this.size = input}/>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button color=\"primary\" type=\"submit\">Update</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    <Form onSubmit={this.handlePush}>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={2}>\r\n                                <Label htmlFor=\"nextItem\">Push</Label>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <Input required type=\"number\" id=\"nextItem\" name=\"nextItem\" innerRef={(input) => this.nextItem = input}/>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button color=\"primary\" type=\"submit\">Push</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <p>Size of Stack = {this.state.stack.length === 0? 0 : this.state.stack.length - 1}</p>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Button onClick={this.handlePop} color=\"warning\">Pop</Button>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Button onClick={this.handleReset} color=\"danger\">Reset</Button>\r\n                        </div>\r\n                    </div>\r\n                    {renderStack}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stack;","import React, { Component } from 'react';\r\nimport { Form, Label, Input, Row, Col, Button } from 'reactstrap';\r\nimport Header from './HeaderComponent';\r\n\r\nclass Queue extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            queue: [],\r\n            front: 0,\r\n            rear: -1,\r\n            lastDequeuedItem: null\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleQueue = this.handleQueue.bind(this);\r\n        this.handleDequeue = this.handleDequeue.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n    }\r\n    createArray(len, item){\r\n        var arr1 = [item],\r\n        arr2 = [];\r\n        while (len > 0) {\r\n            if (len & 1) arr2 = arr2.concat(arr1);\r\n            arr1 = arr1.concat(arr1);\r\n            len >>>= 1;\r\n        }\r\n        return arr2;\r\n    }\r\n    handleSubmit(event){\r\n        if(this.size.value>0 && this.size.value<12){\r\n            var temp = this.createArray(this.size.value, null);\r\n            this.setState({\r\n                queue: temp\r\n            });\r\n        }\r\n        else{\r\n            alert(\"Value should either be positive or less than 12\");\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    isQueueEmpty(length, rear, front){\r\n        if(front-rear === 1 || front === length){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    isQueueFull(length, rear){\r\n        if(rear === length-1){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    handleQueue(event){\r\n        var rear = this.state.rear;\r\n        var queue = this.state.queue;\r\n        if(!this.isQueueFull(queue.length, rear)){\r\n            queue[++rear] = this.nextItem.value;\r\n            this.setState({\r\n                queue: queue,\r\n                rear: rear\r\n            });\r\n        }\r\n        else{\r\n            alert(\"Queue is full, cannot insert\");\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    handleDequeue(){\r\n        var front = this.state.front;\r\n        var queue = this.state.queue;\r\n        if(!this.isQueueEmpty(queue.length, this.state.rear, front)){\r\n            var lastDequeuedItem = queue[front];\r\n            queue[front++] = null;\r\n            this.setState({\r\n                front: front,\r\n                queue: queue,\r\n                lastDequeuedItem: lastDequeuedItem\r\n            });\r\n        }\r\n        else{\r\n            alert(\"Nothing to Dequeue\");\r\n        }\r\n    }\r\n    handleReset(){\r\n        this.setState({\r\n            queue: [],\r\n            front: 0,\r\n            rear: -1,\r\n            lastDequeuedItem: null\r\n        });\r\n    }\r\n    render(){\r\n        var renderQueue = this.state.queue.map((item, index) => {\r\n            return(\r\n                <div key={index} className=\"col-1 queue-test bg-warning\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <h4>{item}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n        if(this.state.queue.length !== 0){\r\n            var temp = this.createArray(this.state.queue.length + 1, null);\r\n            var renderIndex = temp.map((item, index)=>{\r\n                return(\r\n                    <div key={index} className=\"col-1 text-center\">\r\n                        <h5>{index-1}</h5>\r\n                    </div>\r\n                );\r\n            });\r\n            var renderFront = temp.map((item, index) => {\r\n                return(\r\n                    <div key={index} className=\"col-1 text-center\">\r\n                        {this.state.front === index - 1 ? <div>Front<br/><i className=\"fa fa-arrow-down\"></i></div> : <div></div>}\r\n                    </div>\r\n                );\r\n            });\r\n            var renderRear = temp.map((item, index) => {\r\n                return(\r\n                    <div key={index} className=\"col-1 text-center\">\r\n                        {this.state.rear === index - 1 ? <div><i className=\"fa fa-arrow-up\"></i><br/>Rear</div> : <div></div>}\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n        else{\r\n            renderIndex = () => {\r\n                return(<div></div>);\r\n            }\r\n        }\r\n        return(\r\n            <>\r\n                <Header destination=\"Linear Queue\"/>\r\n                <div className=\"container\">\r\n                    <div className=\"p-2 black-yellow mb-4\">\r\n                        <div className=\"row mt-2 mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <h4>Introduction to Queue</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <p>A Queue is a linear structure which follows a particular order in which the operations are performed. The order is First In First Out (FIFO). A good example of a queue is any queue of consumers for a resource where the consumer that came first is served first. The difference between stacks and queues is in removing. In a stack we remove the item the most recently added; in a queue, we remove the item the least recently added.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <h4>Operations on Queue</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                The two main operations on Queue are:-\r\n                                <ul>\r\n                                    <li><b>Enqueue:</b> Add an element to the end of the queue.</li>\r\n                                    <li><b>Dequeue:</b> Remove an element from the front of the queue.</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-12\">\r\n                            <h4>Visualization</h4>\r\n                        </div>\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={2}>\r\n                                <Label htmlFor=\"size\">Size</Label>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <Input required type=\"number\" id=\"size\" name=\"size\" innerRef={(input) => this.size = input}/>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button color=\"primary\" type=\"submit\">Update</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    <Form onSubmit={this.handleQueue}>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={2}>\r\n                                <Label htmlFor=\"nextItem\">Next Item</Label>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <Input required type=\"number\" id=\"nextItem\" name=\"nextItem\" innerRef={(input) => this.nextItem = input}/>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button color=\"primary\" type=\"submit\">Queue</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <p>Size of Queue = {this.state.queue.length}</p>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Button onClick={this.handleDequeue} color=\"warning\">Dequeue</Button>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <Button onClick={this.handleReset} color=\"danger\">Reset</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {renderFront}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {renderIndex}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1\"></div>\r\n                        {renderQueue}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {renderIndex}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {renderRear}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Queue;","import React from 'react';\r\nimport { Card, CardBody, CardHeader } from 'reactstrap';\r\nimport Header from './HeaderComponent';\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div>\r\n            <Header destination=\"Data Structures and Algorithm Visualizer\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Card className=\"p1\">\r\n                            <CardHeader style={{background: \"#D1C4E9\"}}>\r\n                                <h4>Problem Identification</h4>\r\n                            </CardHeader>\r\n                            <CardBody className=\"text-justify\">\r\n                                COVID-19 has come as a big problem for many people. Not only are we facing employment issues, our country is looking at one of the worst times for our economy.\r\n                                With all this, the students and teachers are facing a different problem alltogether. It has become a very difficult task for teachers\r\n                                to teach students without being physically present in the class. The students are also facing difficulties in comprehending what the\r\n                                teacher is teaching as learning from PPTs is not easy. To tackle this issue, our group has decided to develop a system which can \r\n                                simulate the behaviour of different algorithms present in computer science. With their simulation, it would be easier for students\r\n                                to understand these contents as teachers can share their screen while explaining them the working as the algorithm executes. Students\r\n                                can also practice on their own if they want to grasp the concept better.\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Card className=\"p-2 p1\">\r\n                            The following data structures and algorithms are available currently for visualization:\r\n                            <h6>Data Structures</h6>\r\n                            <ul>\r\n                                <li>Stack</li>\r\n                                <li>Queue</li>\r\n                            </ul>\r\n                            <h6>Algorithms</h6>\r\n                            <ul>\r\n                                <li>Breadth First Search(BFS)</li>\r\n                                <li>Depth First Search(DFS)</li>\r\n                            </ul>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","export var graphs = [\r\n    {\r\n        nodes:[\r\n            {\r\n                id: \"n1\",\r\n                textId: \"t1\",\r\n                cx: 50,\r\n                cy: 50,\r\n                text: 1\r\n            },\r\n            {\r\n                id: \"n2\",\r\n                textId: \"t2\",\r\n                cx: 200,\r\n                cy: 200,\r\n                text: 2\r\n            },\r\n            {\r\n                id: \"n3\",\r\n                textId: \"t3\",\r\n                cx: 100,\r\n                cy: 400,\r\n                text: 3\r\n            },\r\n            {\r\n                id: \"n4\",\r\n                textId: \"t4\",\r\n                cx: 400,\r\n                cy: 400,\r\n                text: 4\r\n            },\r\n            {\r\n                id: \"n5\",\r\n                textId: \"t5\",\r\n                cx: 400,\r\n                cy: 100,\r\n                text: 5\r\n            },\r\n            {\r\n                id: \"n6\",\r\n                textId: \"t5\",\r\n                cx: 300,\r\n                cy: 300,\r\n                text: 6\r\n            }\r\n        ],\r\n        edges:[\r\n            {\r\n                id: \"1to2\",\r\n                x1: 50,\r\n                y1: 50,\r\n                x2: 200,\r\n                y2: 200\r\n            },\r\n            {\r\n                id: \"2to3\",\r\n                x1: 200,\r\n                y1: 200,\r\n                x2: 100,\r\n                y2: 400\r\n            },\r\n            {\r\n                id: \"1to3\",\r\n                x1: 100,\r\n                y1: 400,\r\n                x2: 50,\r\n                y2: 50\r\n            },\r\n            {\r\n                id: \"3to4\",\r\n                x1: 100,\r\n                y1: 400,\r\n                x2: 400,\r\n                y2: 400\r\n            },\r\n            {\r\n                id: \"2to5\",\r\n                x1: 200,\r\n                y1: 200,\r\n                x2: 400,\r\n                y2: 100\r\n            },\r\n            {\r\n                id: \"4to5\",\r\n                x1: 400,\r\n                y1: 400,\r\n                x2: 400,\r\n                y2: 100\r\n            }\r\n        ],\r\n        network:[[0, 1, 1, 0, 0, 0], [1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0]]\r\n    },\r\n    {\r\n        nodes:[\r\n            {\r\n                id: \"n1\",\r\n                textId: \"t1\",\r\n                cx: 200,\r\n                cy: 50,\r\n                text: 1\r\n            },\r\n            {\r\n                id: \"n2\",\r\n                textId: \"t2\",\r\n                cx: 50,\r\n                cy: 150,\r\n                text: 2\r\n            },\r\n            {\r\n                id: \"n3\",\r\n                textId: \"t3\",\r\n                cx: 400,\r\n                cy: 150,\r\n                text: 3\r\n            },\r\n            {\r\n                id: \"n4\",\r\n                textId: \"t4\",\r\n                cx: 200,\r\n                cy: 250,\r\n                text: 4\r\n            },\r\n            {\r\n                id: \"n5\",\r\n                textId: \"t5\",\r\n                cx: 50,\r\n                cy: 350,\r\n                text: 5\r\n            },\r\n            {\r\n                id: \"n6\",\r\n                textId: \"t6\",\r\n                cx: 400,\r\n                cy: 350,\r\n                text: 6\r\n            }\r\n        ],\r\n        edges:[\r\n            {\r\n                id: \"1to2\",\r\n                x1: 200,\r\n                y1: 50,\r\n                x2: 50,\r\n                y2: 150\r\n            },\r\n            {\r\n                id: \"1to3\",\r\n                x1: 200,\r\n                y1: 50,\r\n                x2: 400,\r\n                y2: 150\r\n            },\r\n            {\r\n                id: \"2to4\",\r\n                x1: 50,\r\n                y1: 150,\r\n                x2: 200,\r\n                y2: 250\r\n            },\r\n            {\r\n                id: \"3to4\",\r\n                x1: 400,\r\n                y1: 150,\r\n                x2: 200,\r\n                y2: 250\r\n            },\r\n            {\r\n                id: \"4to5\",\r\n                x1: 200,\r\n                y1: 250,\r\n                x2: 50,\r\n                y2: 350\r\n            },\r\n            {\r\n                id: \"4to6\",\r\n                x1: 200,\r\n                y1: 250,\r\n                x2: 400,\r\n                y2: 350\r\n            },\r\n            {\r\n                id: \"5to6\",\r\n                x1: 50,\r\n                y1: 350,\r\n                x2: 400,\r\n                y2: 350\r\n            }\r\n        ],\r\n        network:[[0,1,1,0,0,0], [1,0,0,1,0,0], [1,0,0,1,0,0], [0,1,1,0,1,1], [0,0,0,1,0,1], [0,0,0,1,1,0]]\r\n    },\r\n    {\r\n        nodes:[\r\n            {\r\n                id: \"n1\",\r\n                textId: \"t1\",\r\n                cx: 150,\r\n                cy: 150,\r\n                text: 1\r\n            },\r\n            {\r\n                id: \"n2\",\r\n                textId: \"t2\",\r\n                cx: 150,\r\n                cy: 50,\r\n                text: 2\r\n            },\r\n            {\r\n                id: \"n3\",\r\n                textId: \"t3\",\r\n                cx: 50,\r\n                cy: 50,\r\n                text: 3\r\n            },\r\n            {\r\n                id: \"n4\",\r\n                textId: \"t4\",\r\n                cx: 250,\r\n                cy: 50,\r\n                text: 4\r\n            },\r\n            {\r\n                id: \"n5\",\r\n                textId: \"t5\",\r\n                cx: 150,\r\n                cy: 250,\r\n                text: 5\r\n            },\r\n            {\r\n                id: \"n6\",\r\n                textId: \"t6\",\r\n                cx: 50,\r\n                cy: 350,\r\n                text: 6\r\n            },\r\n            {\r\n                id: \"n7\",\r\n                textId: \"t7\",\r\n                cx: 250,\r\n                cy: 350,\r\n                text: 7\r\n            }\r\n        ],\r\n        edges:[\r\n            {\r\n                id: \"1to2\",\r\n                x1: 150,\r\n                y1: 150,\r\n                x2: 150,\r\n                y2: 50\r\n            },\r\n            {\r\n                id: \"1to3\",\r\n                x1: 150,\r\n                y1: 150,\r\n                x2: 50,\r\n                y2: 50\r\n            },\r\n            {\r\n                id: \"1to4\",\r\n                x1: 150,\r\n                y1: 150,\r\n                x2: 250,\r\n                y2: 50\r\n            },\r\n            {\r\n                id: \"1to5\",\r\n                x1: 150,\r\n                y1: 150,\r\n                x2: 150,\r\n                y2: 250\r\n            },\r\n            {\r\n                id: \"5to6\",\r\n                x1: 150,\r\n                y1: 250,\r\n                x2: 50,\r\n                y2: 350\r\n            },\r\n            {\r\n                id: \"5to7\",\r\n                x1: 150,\r\n                y1: 250,\r\n                x2: 250,\r\n                y2: 350\r\n            }\r\n        ],\r\n        network:[[0,1,1,1,1,0,0], [1,0,0,0,0,0,0], [1,0,0,0,0,0,0], [1,0,0,0,0,0,0], [1,0,0,0,0,1,1], [0,0,0,0,1,0,0], [0,0,0,0,1,0,0]]\r\n    }\r\n]","import React, { Component } from 'react';\r\nimport { Button, Form, Label, Input, Row, Col, ButtonGroup } from 'reactstrap';\r\nimport Header from './HeaderComponent';\r\nimport {graphs} from '../shared/graphs';\r\n\r\nclass BFS extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            graph: graphs[0]\r\n        }\r\n        this.HandleStartingNode = this.HandleStartingNode.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n    reset(){\r\n        this.state.graph.nodes.map((node) => document.getElementById(node.id).style.fill = \"red\");\r\n        this.state.graph.edges.map((edge) => document.getElementById(edge.id).style.stroke = \"#006400\");\r\n    }\r\n    sleep(ms) {\r\n        return new Promise(\r\n          resolve => setTimeout(resolve, ms)\r\n        );\r\n    }\r\n    async BFS(network, startNode){\r\n        var queue = [startNode];\r\n        var parent = [];\r\n        for(var i=0; i<network.length; i++){\r\n            parent.push(null);\r\n        }\r\n        parent[startNode] = startNode;\r\n        var node, node_id, edge_id;\r\n        while(queue.length!==0){\r\n            node = queue.shift()\r\n            node_id = \"n\"+(node+1);\r\n            document.getElementById(node_id).style.fill = \"blue\";\r\n            await this.sleep(1000);\r\n            for( i = 0; i<network[node].length; i++){\r\n                if(network[node][i] !== 0 && parent[i] === null){\r\n                    if(node<i){\r\n                        edge_id = (node+1)+\"to\"+(i+1);\r\n                    }\r\n                    else{\r\n                        edge_id = (i+1)+\"to\"+(node+1);\r\n                    }\r\n                    document.getElementById(edge_id).style.stroke = \"#FF4500\";\r\n                    await this.sleep(1000);\r\n                    queue.push(i);\r\n                    parent[i] = node;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    HandleStartingNode(event){\r\n        var requiredNode = this.state.graph.nodes.filter((node) => node.text === parseInt(this.startNode.value))[0];\r\n        this.BFS(this.state.graph.network, requiredNode.text - 1);\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render(){ \r\n        const renderEdges = this.state.graph.edges.map((edge)=>{\r\n            return(\r\n                <line id={edge.id} x1={edge.x1} y1={edge.y1} x2={edge.x2} y2={edge.y2} stroke=\"#006400\" stroke-width=\"3\" />\r\n            );\r\n        });\r\n        const renderNodes = this.state.graph.nodes.map((node) => {\r\n            return(\r\n                <>\r\n                    <circle id={node.id} cx={node.cx} cy={node.cy} r=\"20\" stroke=\"black\" stroke-width=\"3\" fill=\"red\"/>\r\n                    <text id={node.textId} x={node.cx} y={node.cy} text-anchor=\"middle\" stroke=\"#ffffff\" stroke-width=\"1px\" dy=\".3em\">{node.text}</text>\r\n                </>\r\n            );\r\n        });\r\n        return(\r\n            <>\r\n                <Header destination=\"Breadth First Search\"/>\r\n                <div className=\"container\">\r\n                    <div className=\"p-2 border black-yellow mb-2\">\r\n                        <div className=\"row mb-2 mt-2\">\r\n                            <div className=\"col-12\">\r\n                                <h4>Introduction to BFS</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <p>The Breadth First Search (BFS) traversal is an algorithm, which is used to visit all of the nodes of a given graph. In this traversal algorithm one node is selected and then all of the adjacent nodes are visited one by one. After completing all of the adjacent vertices, it moves further to check another vertices and checks its adjacent vertices again.</p>\r\n                                <p>To implement this algorithm, we need to use the Queue data structure. All the adjacent vertices are added into the queue, when all adjacent vertices are completed, one item is removed from the queue and start traversing through that vertex again.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-4\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <ButtonGroup>\r\n                                <Button onClick={() => {\r\n                                    this.setState({graph: graphs[0]});\r\n                                    this.reset();\r\n                                    }}>1</Button>\r\n                                <Button onClick={() => {\r\n                                    this.setState({graph: graphs[1]});\r\n                                    this.reset();\r\n                                    }}>2</Button>\r\n                                <Button onClick={() => {\r\n                                    this.setState({graph: graphs[2]});\r\n                                    this.reset();\r\n                                    }}>3</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <svg height=\"500\" width=\"500\">\r\n                                {renderEdges}\r\n                                {renderNodes}\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <Form onSubmit={this.HandleStartingNode}>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={2}>\r\n                                        <Label htmlFor=\"size\">Enter Starting Node</Label>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Input required type=\"number\" id=\"startnode\" name=\"startnode\" innerRef={(input) => this.startNode = input}/>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button color=\"primary\" type=\"submit\">Start BFS</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            <Button onClick={this.reset} color=\"danger\">Reset Graph</Button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BFS;","import React from 'react';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <h5>Academic Details of Developers</h5>\r\n                        <p>\r\n                            Bachelor in Technology<br/>\r\n                            Computer Science and Engineering<br/>\r\n                            Batch: 2017-21<br/>\r\n                            Ambala College of Engineering and Applied Research<br/>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p>Designed and Developed by:</p>\r\n                        <ul>\r\n                            <li>Gurcharan Kohli</li>\r\n                            <li>Utkarsh Bansal</li>\r\n                            <li>Yogantar Chhibber</li>\r\n                            <li>Manpreet Singh</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport {Button, ButtonGroup} from 'reactstrap';\r\nimport Header from './HeaderComponent';\r\nimport {graphs} from '../shared/graphs';\r\n\r\nclass DFS extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            graph: graphs[0]\r\n        }\r\n        this.parent=[];\r\n        this.color=[];\r\n        this.DFS = this.DFS.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n\r\n    reset(){\r\n        this.state.graph.nodes.map((node) => document.getElementById(node.id).style.fill = \"red\");\r\n        this.state.graph.edges.map((edge) => document.getElementById(edge.id).style.stroke = \"#006400\");\r\n        this.parent = [];\r\n        this.color = [];\r\n    }\r\n    sleep(ms) {\r\n        return new Promise(\r\n          resolve => setTimeout(resolve, ms)\r\n        );\r\n    }\r\n    async DFS(network){\r\n        for(var i=0; i<network.length; i++){\r\n            this.parent.push(null);\r\n            this.color.push(0);\r\n        }\r\n        for(i=0; i<network.length; i++){\r\n            if(this.color[i] === 0){\r\n                await this.DFS_Visit(network, i);\r\n            }\r\n        }\r\n    }\r\n    async DFS_Visit(network, node){\r\n        this.color[node] = 1;\r\n        var edge_id;\r\n        for(var j=0; j<network.length; j++){\r\n            if(network[node][j] !== 0){\r\n                if(this.color[j]===0){\r\n                    if(node<j){\r\n                        edge_id = (node+1)+\"to\"+(j+1);\r\n                    }\r\n                    else{\r\n                        edge_id = (j+1)+\"to\"+(node+1);\r\n                    }\r\n                    await this.sleep(1000);\r\n                    document.getElementById(edge_id).style.stroke = \"#FF4500\";\r\n                    this.parent[j] = node;\r\n                    await this.DFS_Visit(network, j);\r\n                }\r\n            }\r\n        }\r\n        await this.sleep(1000);\r\n        var node_id = \"n\"+(node+1);\r\n        document.getElementById(node_id).style.fill = \"blue\";\r\n        this.color[node] = 2;\r\n    }\r\n\r\n    render(){\r\n        const renderEdges = this.state.graph.edges.map((edge)=>{\r\n            return(\r\n                <line id={edge.id} x1={edge.x1} y1={edge.y1} x2={edge.x2} y2={edge.y2} stroke=\"#006400\" stroke-width=\"3\" />\r\n            );\r\n        });\r\n        const renderNodes = this.state.graph.nodes.map((node) => {\r\n            return(\r\n                <>\r\n                    <circle id={node.id} cx={node.cx} cy={node.cy} r=\"20\" stroke=\"black\" stroke-width=\"3\" fill=\"red\"/>\r\n                    <text id={node.textId} x={node.cx} y={node.cy} text-anchor=\"middle\" stroke=\"#ffffff\" stroke-width=\"1px\" dy=\".3em\">{node.text}</text>\r\n                </>\r\n            );\r\n        });\r\n        return(\r\n            <>\r\n                <Header destination=\"Depth First Search\"/>\r\n                <div className=\"container\">\r\n                    <div className=\"p-2 border black-yellow mb-2\">\r\n                        <div className=\"row mb-2 mt-2\">\r\n                            <div className=\"col-12\">\r\n                                <h4>Introduction to DFS</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-12\">\r\n                                <p>Depth-first search is an algorithm for traversing or searching tree or graph data structures. The algorithm starts at the root node (selecting some arbitrary node as the root node in the case of a graph) and explores as far as possible along each branch before backtracking. So the basic idea is to start from the root or any arbitrary node and mark the node and move to the adjacent unmarked node and continue this loop until there is no unmarked adjacent node. Then backtrack and check for other unmarked nodes and traverse them. Finally print the nodes in the path.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-4\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <ButtonGroup>\r\n                                <Button onClick={() => {\r\n                                    this.setState({graph: graphs[0]});\r\n                                    this.reset();\r\n                                    }}>1</Button>\r\n                                <Button onClick={() => {\r\n                                    this.setState({graph: graphs[1]});\r\n                                    this.reset();\r\n                                    }}>2</Button>\r\n                                <Button onClick={() => {\r\n                                    this.setState({graph: graphs[2]});\r\n                                    this.reset();\r\n                                    }}>3</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <svg height=\"500\" width=\"500\">\r\n                                {renderEdges}\r\n                                {renderNodes}\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <Button onClick={() => {this.DFS(this.state.graph.network)}} color=\"primary\">Start DFS</Button>\r\n                            <Button onClick={this.reset} color=\"danger\">Reset Graph</Button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DFS;","import React from 'react';\r\nimport Header from './HeaderComponent';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport { Card } from 'reactstrap';\r\n\r\nfunction About(props){\r\n    var renderDevelopers = props.developers.map((developer)=>{\r\n        return(\r\n            <Fade in key={developer.id}>\r\n                <Card className=\"mt-3 p1 p-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 col-md-2\">\r\n                            <img src={developer.image} alt={developer.name} className=\"img-fluid img-thumbnail\"/>\r\n                        </div>\r\n                        <div className=\"col-8 col-md-10\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\"><h5>{developer.name}</h5></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\"><h6>Roll No.: {developer.roll_no}</h6></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\"><h6>Email: <a href={\"mailto:\".concat(developer.email)}>{developer.email}</a></h6></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\"><p><b>Skills:</b> {developer.skills}</p></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </Fade>\r\n        );\r\n    });\r\n    return(\r\n        <>\r\n            <Header destination=\"About the Developers\"/>\r\n            <div className=\"container\">\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Developers</h3>\r\n                    </div>\r\n                </div>\r\n                <Stagger in>\r\n                    {renderDevelopers}\r\n                    <Fade in>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-12\">\r\n                                <h3>Supervisor</h3>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n                    <Fade in>\r\n                        <Card className=\"mt-3 mb-3 p1 p-2\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4 col-md-2\">\r\n                                    <img src=\"/assets/images/manjit-singh.jpg\" alt=\"Manjit Singh\" className=\"img-fluid img-thumbnail\"/>\r\n                                </div>\r\n                                <div className=\"col-8 col-md-10\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\"><h5>Er. Manjit Singh</h5></div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\"><h6>Head of Department, Computer Science and Engineering</h6></div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\"><h6>Ambala College of Engineering and Applied Research</h6></div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\"><h6>Email: <a href=\"mailto:hodcseace@ambalacollege.com\">hodcseace@ambalacollege.com</a></h6></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </Fade>\r\n                </Stagger>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default About;","export var developers = [\r\n    {\r\n        id: 0,\r\n        roll_no: 2317007,\r\n        name: \"Gurcharan Kohli\",\r\n        image: \"/assets/images/gurcharan.jpg\",\r\n        email: \"gurcharankohli1000@gmail.com\",\r\n        skills: \"React, DBMS, C++, Machine Learning, Python\"\r\n    },\r\n    {\r\n        id: 1,\r\n        roll_no: 2317010,\r\n        name: \"Utkarsh Bansal\",\r\n        image: \"/assets/images/uts.jpg\",\r\n        email: \"utkarshbansal210@gmail.com\",\r\n        skills: \"React, Python, JavaScript, Front-End Web Development, DBMS\"\r\n    },\r\n    {\r\n        id: 2,\r\n        roll_no: 2317011,\r\n        name: \"Yogantar Chhibber\",\r\n        image: \"/assets/images/yogantar.jpg\",\r\n        email: \"yugantarc@gmail.com\",\r\n        skills: \"Illustration, UI Design, Logo Design, Vector Design, C, C++, Python\"\r\n    },\r\n    {\r\n        id: 3,\r\n        roll_no: 2317018,\r\n        name: \"Manpreet Singh\",\r\n        image: \"/assets/images/manpreet.jpeg\",\r\n        email: \"goldieeyou@gmail.com\",\r\n        skills: \"Programming in C, C++, Python\"\r\n    }\r\n]","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Navigation from './NavbarComponent';\r\nimport Stack from './StackComponent';\r\nimport Queue from './QueueComponent';\r\nimport Home from './HomeComponent';\r\nimport BFS from './BFSComponent';\r\nimport Footer from './FooterComponent';\r\nimport DFS from './DFSComponent';\r\nimport About from './AboutComponent';\r\nimport {developers} from '../shared/developers';\r\n\r\nclass Main extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navigation/>\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/stack\" component={Stack}/>\r\n                    <Route path=\"/queue\" component={Queue}/>\r\n                    <Route path=\"/bfs\" component={BFS}/>\r\n                    <Route path=\"/dfs\" component={DFS}/>\r\n                    <Route path=\"/about\" component={()=><About developers={developers}/>}/>\r\n                    <Redirect to=\"/home\"/>\r\n                </Switch>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Main);","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n      <BrowserRouter>\n        <div>\n          <Main/>\n        </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}